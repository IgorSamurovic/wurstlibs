package ProtectedMap
import NoWurst
import public TypeCasting
import public Table

/** Essentially a hash map with protected methods */
public class ProtectedMap<K,V> extends Table
	
	/** Whether a value exists under the given key or not */
	protected function has(K key) returns boolean
		return hasInt(key castTo int)
	
	/** Saves the given value under the given key */
	protected function put(K key, V value)
		saveInt(key castTo int, value castTo int)
		
	/** Retrieves the value saved under the given key */
	protected function get(K key) returns V
		return loadInt(key castTo int) castTo V
	
	/** Removes the value saved under the given key */
	protected function remove(K key)
		removeInt(key castTo int)

