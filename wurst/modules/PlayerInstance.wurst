package PlayerInstance
import Players

/** Makes it possible to attach a class to a player easily. */
public module PlayerInstance
    protected static thistype array zzz_player_inst

    static thistype localInstance = null

    static function getLocalInstance() returns thistype
        return localInstance

    private player owningPlayer
    private int owningPlayerId

    function getOwningPlayer() returns player
        return owningPlayer

    function getId() returns int
        return owningPlayerId

    /** Returns the instance associated with a player.
        Returns null if it has not been initialized. */
    static function of(player p) returns thistype
        return zzz_player_inst[p.getId()]

    /** Returns the instance associated with a playerid.
        Returns null if it has not been initialized. */
    static function of(int playerId) returns thistype
        return zzz_player_inst[playerId]

    /** Attaches this instance to a player. */
    function attachTo(player p)
        owningPlayerId = p.getId()
        zzz_player_inst[owningPlayerId] = this
        this.owningPlayer = p
        if p == GetLocalPlayer()
            localInstance = this

    /** Detaches this instance from a player. */
    function detachFromPlayer()
        zzz_player_inst[owningPlayer.getId()] = null
        if this.owningPlayer == GetLocalPlayer()
            localInstance = null
        this.owningPlayer = null

    ondestroy
        detachFromPlayer()

    /** Implements what to do once the unit is indexed. */
    abstract static function initPlayerInstance(player p)

    /** Makes the class automatically initialize. */
    static function zzz_PlayerInstanceInit() returns bool
        for i=0 to 15
            initPlayerInstance(playerWithId(i))
        return true

    static constant zzz_initUnitInstance = zzz_PlayerInstanceInit()